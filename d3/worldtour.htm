<!DOCTYPE html>
<meta charset="utf-8">
<html>
<head>
  <title>Cities appearing in The World Tour in 80 Days</title>
</head>
<body>

  <style>

    .background {
      fill: #a4bac7;
    }
    
    .foreground {
      fill: none;
      stroke: #333;
      stroke-width: 1.5px;
    }
    
    .graticule {
      fill: none;
      stroke: #fff;
      stroke-width: .5px;
    }
    
    .graticule :nth-child(2n) {
      stroke-dasharray: 2,2;
    }
    
    .land {
      fill: #d7c7ad;
      stroke: #766951;
    }
    
    .geojson {
     fill: none;
     stroke: green;
     stroke-width: 4;
    }
    
    .boundary {
      fill: none;
      stroke: #a5967e;
    }

    div.tooltip { 
      position: absolute;     
      text-align: center;     
      width: 80px;          
      height: 14px;         
      padding: 2px;       
      font: 12px sans-serif;    
      background: #fff; 
      border: 0px;        
      pointer-events: none;     
    }

    .imgpages {
      width: 400px;
    }

    h1 {
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }

    .small {
      font-size: smaller;
    }

    </style>


    <h2>Cities appearing in The World Tour in 80 Days ebook</h2>
    <p>Click or hover on a city to display the appearances of the city in the ebook by line number (best viewed on computer). </p>
    <p class="small">E-book read automatically with python, <a href="https://spacy.io/">spacy</a> and a few other things. Visualization with <a href="https://d3js.org/">D3.js</a>. <a href="https://github.com/qupixel/worldtour">[Source code]</a></p>
    <div style="margin: 0 auto;">
    <div id="js-geojson-example"></div>
    </div>

    <script src="https://code.jquery.com/jquery-2.0.3.js"></script>
    <script src="https://d3js.org/d3.v3.min.js"></script>
    <script src="https://d3js.org/topojson.v0.min.js"></script>
    <script src="https://bl.ocks.org/grahamjenson/raw/8168412/worldtopo.js"></script>


<script>
    var width = $(window).width(),
        height = $(window).height();
    
    var sc = Math.min(width,height)*0.25;
    
    var projection = d3.geo.equirectangular()
        .scale(sc)
        .rotate([-130,20])
        .translate([width/2, height/3]);
    
    var path = d3.geo.path()
        .projection(projection);
    
    var graticule = d3.geo.graticule();
    
    var svg = d3.select("#js-geojson-example").append("svg")
        .attr("width", width)
        .attr("height", height);
    
    svg.selectAll(".land")
          .data([topojson.object(worldtopo, worldtopo.objects.land)])
          .enter().append('path')
          .attr('class','land')
          .attr("d", path);

d3.csv("../cities.csv", function(data) {

    var tooltip = d3.select("body").append("div") 
        .attr("class", "tooltip")       
        .style("opacity", 0);


    svg.selectAll("circle")
        .data(data)
        .enter()
        .append("circle")
        .attr("cx", function(d) {
            return projection([d.lng, d.lat])[0];
        })
        .attr("cy", function(d) {
            return projection([d.lng, d.lat])[1];
        })
        .attr("r", function(d) {
            return 5;
        })
            .style("fill", "rgb(217,91,67)")	
            .style("opacity", 0.85)	

        // Modification of custom tooltip code provided by Malcolm Maclean, "D3 Tips and Tricks" 
        // http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html
        .on("mouseover", function(d) {      
            tooltip.transition()        
            .duration(200)      
            .style("opacity", .9);      
            tooltip.html("<img class=\"imgpages\" src=\""+ d.place + ".png\"/>")
            .style("left", Math.min(width-410, d3.event.pageX) + "px")     
            .style("top", (d3.event.pageY - 28) + "px");    
        })   
        .on("click", function(d) {      
            tooltip.transition()        
            .duration(200)      
            .style("opacity", .9);      
            tooltip.html("<img class=\"imgpages\" src=\""+ d.place + ".png\"/>")
            .style("left", Math.min(width-410, d3.event.pageX) + "px")     
            .style("top", (d3.event.pageY - 28) + "px");    
        })   

        // fade out tooltip on mouse out               
        .on("mouseout", function(d) {       
            tooltip.transition()        
            .duration(500)      
            .style("opacity", 0);   
        });


    var points = data;
    var geojson =[]
    for (var i = 0; i < points.length; i++) {
            var x = points[i].lng;
            var y = points[i].lat;
            geojson.push([x,y]);
            }

  var lineString = { "type": "LineString", "coordinates": geojson }

  svg.selectAll(".geojson").data([lineString])
    .enter()
    .append("path")
    .attr("class","geojson")
    .attr("d", path);

});  // csv

// Lines between cities


</script>

</body>    
</html>
